{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react-mini-apps/facebook-comment-card/src/App.js\";\nimport React, { Component } from 'react';\nimport CommentCard from './components/CommentCard';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: \"Ahmad Al-Ghzawi\",\n      nickName: \"GHZ\",\n      comments: [{\n        id: 1,\n        text: \"Hi there!\"\n      }]\n    };\n\n    this.getComment = () => {\n      if (this.comment.value.length > 0) {\n        let text = this.commentBody.value;\n        let comments = this.state.comments;\n        let id = this.state.comments.length + 1;\n        comments.push({\n          id,\n          text\n        });\n        this.setState({\n          comments\n        });\n      }\n\n      console.log(this.state.comments);\n    };\n  }\n\n  getTime() {}\n\n  render() {\n    const commentComponents = this.state.comments.map(comment => React.createElement(CommentCard, {\n      key: comment.id,\n      name: this.state.name,\n      nickName: this.state.nickName,\n      commentText: comment.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, commentComponents, React.createElement(\"input\", {\n      ref: text => this.commentBody = text,\n      className: \"mt-5\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.getComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Comment\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react-mini-apps/facebook-comment-card/src/App.js"],"names":["React","Component","CommentCard","App","state","name","nickName","comments","id","text","getComment","comment","value","length","commentBody","push","setState","console","log","getTime","render","commentComponents","map"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BG,KAF0B,GAElB;AACNC,MAAAA,IAAI,EAAE,iBADA;AAENC,MAAAA,QAAQ,EAAE,KAFJ;AAINC,MAAAA,QAAQ,EAAG,CACT;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,IAAI,EAAE;AAAd,OADS;AAJL,KAFkB;;AAAA,SAe1BC,UAf0B,GAeb,MAAM;AACjB,UAAI,KAAKC,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,GAA4B,CAAhC,EAAmC;AACjC,YAAIJ,IAAI,GAAG,KAAKK,WAAL,CAAiBF,KAA5B;AACA,YAAIL,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA1B;AACA,YAAIC,EAAE,GAAG,KAAKJ,KAAL,CAAWG,QAAX,CAAoBM,MAApB,GAA6B,CAAtC;AACAN,QAAAA,QAAQ,CAACQ,IAAT,CAAc;AAACP,UAAAA,EAAD;AAAKC,UAAAA;AAAL,SAAd;AACA,aAAKO,QAAL,CAAc;AAACT,UAAAA;AAAD,SAAd;AACD;;AACDU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,QAAvB;AACD,KAxByB;AAAA;;AAW1BY,EAAAA,OAAO,GAAI,CAEV;;AAaDC,EAAAA,MAAM,GAAI;AACR,UAAMC,iBAAiB,GAAG,KAAKjB,KAAL,CAAWG,QAAX,CAAoBe,GAApB,CAAwBX,OAAO,IACvD,oBAAC,WAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACH,EADf;AAEE,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IAFnB;AAGE,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWE,QAHvB;AAIE,MAAA,WAAW,EAAEK,OAAO,CAACF,IAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADwB,CAA1B;AAQA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,iBADH,EAEE;AAAO,MAAA,GAAG,EAAEZ,IAAI,IAAI,KAAKK,WAAL,GAAmBL,IAAvC;AAA6C,MAAA,SAAS,EAAC,MAAvD;AAA8D,MAAA,IAAI,EAAG,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,CADF;AAOD;;AA1CyB;;AA8C5B,eAAeP,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport CommentCard from './components/CommentCard';\n\nclass App extends Component {\n\n  state = {\n    name: \"Ahmad Al-Ghzawi\",\n    nickName: \"GHZ\",\n\n    comments : [\n      {id: 1, text: \"Hi there!\"}\n    ]\n  }\n\n  getTime () {\n\n  }\n\n  getComment = () => {\n    if (this.comment.value.length > 0) {\n      let text = this.commentBody.value;\n      let comments = this.state.comments;\n      let id = this.state.comments.length + 1;\n      comments.push({id, text});\n      this.setState({comments}); \n    }\n    console.log(this.state.comments);\n  }\n\n  render () {\n    const commentComponents = this.state.comments.map(comment => \n      <CommentCard \n        key={comment.id} \n        name={this.state.name} \n        nickName={this.state.nickName} \n        commentText={comment.text}\n      />)\n\n    return (\n      <div className=\"container\">\n        {commentComponents}\n        <input ref={text => this.commentBody = text} className=\"mt-5\" type = \"text\"/>\n        <button onClick={this.getComment}>Comment</button>\n      </div>\n    )\n  }\n\n}\n \nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}