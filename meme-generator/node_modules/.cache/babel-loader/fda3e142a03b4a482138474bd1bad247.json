{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\n\nclass Counter extends Component {\n  // state = {\n  //     value: this.props.counter.value,\n  //     // tags: ['tag1', 'tag2', 'tag3']\n  //     // address: {\n  //     //     street: 'Kamil Mohd Odeh'\n  //     // },\n  //     // imageUrl: 'https://picsum.photos/200'\n  // };\n  // constructor() {\n  //     super();\n  //     this.handleIncrement = this.handleIncrement.bind(this); //binding method\n  // }\n  // styles = {\n  //     fontSize: 50,\n  //     fontWeight: 'bold'\n  // }; use (style={this.styles}) with it\n  // or use style={{ fontSize: 30 }} for inline style\n  // renderTags() {\n  //     if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n  //     return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n  // }\n  // handleIncrement = (product) => {  // or use arrow function for binding \n  //     this.setState({value: this.state.value+1});\n  // };\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.props.onIncrement(this.props.counter),\n      className: \"btn btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Increment\"), React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.counter.id),\n      className: \"btn btn-danger btn-sm m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  formatCount() {\n    const count = this.state.value;\n    return count === 0 ? 'Zero' : count;\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","getBadgeClasses","formatCount","props","onIncrement","counter","onDelete","id","count","state","value","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAE,EAAAA,MAAM,GAAI;AACN,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAM,MAAA,SAAS,EAAE,KAAKC,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CAHJ,EAII;AACI,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKD,KAAL,CAAWE,OAAlC,CADnB;AAGI,MAAA,SAAS,EAAC,0BAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,EAUI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKH,KAAL,CAAWE,OAAX,CAAmBE,EAAvC,CAAvB;AACI,MAAA,SAAS,EAAC,2BADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVJ,CADJ;AAkBH;;AAEDL,EAAAA,WAAW,GAAI;AAAA,UACIM,KADJ,GACc,KAAKC,KADnB,CACHC,KADG;AAEX,WAAOF,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;AACH;;AAEDP,EAAAA,eAAe,GAAG;AACd,QAAIU,OAAO,GAAG,kBAAd;AACAA,IAAAA,OAAO,IAAK,KAAKF,KAAL,CAAWC,KAAX,KAAqB,CAAtB,GAA2B,SAA3B,GAAuC,SAAlD;AACA,WAAOC,OAAP;AACH;;AA5D2B;;AA+DhC,eAAeZ,OAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    // state = {\n    //     value: this.props.counter.value,\n    //     // tags: ['tag1', 'tag2', 'tag3']\n    //     // address: {\n    //     //     street: 'Kamil Mohd Odeh'\n    //     // },\n    //     // imageUrl: 'https://picsum.photos/200'\n    // };\n\n    // constructor() {\n    //     super();\n    //     this.handleIncrement = this.handleIncrement.bind(this); //binding method\n    // }\n\n    // styles = {\n    //     fontSize: 50,\n    //     fontWeight: 'bold'\n    // }; use (style={this.styles}) with it\n\n    // or use style={{ fontSize: 30 }} for inline style\n\n    // renderTags() {\n    //     if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n    //     return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>\n    // }\n    // handleIncrement = (product) => {  // or use arrow function for binding \n    //     this.setState({value: this.state.value+1});\n    // };\n\n    render () { \n        return (\n            <div>\n                {/* {this.props.children} or this.props.id */}\n                {/* <img src={this.state.imageUrl} alt=\"\"></img> */}\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                    onClick={() => this.props.onIncrement(this.props.counter)} \n                \n                    className=\"btn btn-secondary btn-sm\">Increment</button>\n                {/* {this.state.tags.length === 0 && 'Please create a new tag!'}\n                {this.renderTags()} */}\n                <button onClick={() => this.props.onDelete(this.props.counter.id)} \n                    className=\"btn btn-danger btn-sm m-2\"\n                >\n                    Delete\n                </button>\n            </div>\n        );\n    };\n    \n    formatCount () {\n        const { value: count } = this.state;\n        return count === 0 ? 'Zero' : count;\n    };\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.state.value === 0) ? \"warning\" : \"primary\";\n        return classes;\n    };\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}