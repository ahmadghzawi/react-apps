{"ast":null,"code":"import _objectSpread from \"/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar.jsx';\nimport Counters from './components/counters.jsx';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      this.setState({\n        counters\n      });\n    };\n\n    this.handleDelete = counterId => {\n      // console.log('Event handler called', counterId);\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      }); //because key and value are the same {counters: counters}\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      totalCounters: this.state.counters.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Counters, {\n      counters: this.state.counters,\n      onReset: this.handleReset,\n      onIncrement: this.handleIncrement,\n      onDelete: this.handleDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/App.js"],"names":["React","Component","NavBar","Counters","App","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","map","render","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAJM;AADJ,KADkB;;AAAA,SAS5BC,eAT4B,GASVC,OAAO,IAAI;AACzB,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAsBD,OAAtB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACH,KAf2B;;AAAA,SAgB5BQ,YAhB4B,GAgBZC,SAAD,IAAe;AAC1B;AACA,YAAMT,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,SAAzC,CAAjB;AACA,WAAKF,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd,EAH0B,CAGA;AAC7B,KApB2B;;AAAA,SAqB5BY,WArB4B,GAqBd,MAAM;AAChB,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBF,CAAC,IAAI;AAC1CA,QAAAA,CAAC,CAACT,KAAF,GAAU,CAAV;AACA,eAAOS,CAAP;AACC,OAHY,CAAjB;AAII,WAAKJ,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACP,KA3B2B;AAAA;;AA6B1Bc,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,aAAa,EAAE,KAAKf,KAAL,CAAWC,QAAX,CAAoBe,MADrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAIE;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACA,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWC,QADrB;AAEA,MAAA,OAAO,EAAE,KAAKY,WAFd;AAGA,MAAA,WAAW,EAAE,KAAKT,eAHlB;AAIA,MAAA,QAAQ,EAAE,KAAKK,YAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAeD;;AA7CyB;;AAgD5B,eAAeV,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport NavBar from './components/navbar.jsx'\nimport Counters from './components/counters.jsx'\n\nclass App extends Component {\n  state = { \n    counters: [\n        {id: 1, value: 4},\n        {id: 2, value: 0},\n        {id: 3, value: 0},\n        {id: 4, value: 0}\n    ]\n }; \nhandleIncrement = counter => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(counter);\n    counters[index] = {...counter};\n    counters[index].value++;\n    this.setState({counters});\n}\nhandleDelete = (counterId) => {\n    // console.log('Event handler called', counterId);\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({counters}) //because key and value are the same {counters: counters}\n};\nhandleReset = () => {\n    const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n        });\n        this.setState({counters})\n};\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar \n          totalCounters={this.state.counters.length}\n        />\n        <main className='container'>\n          <Counters\n          counters={this.state.counters} \n          onReset={this.handleReset} \n          onIncrement={this.handleIncrement} \n          onDelete={this.handleDelete}\n          />\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}