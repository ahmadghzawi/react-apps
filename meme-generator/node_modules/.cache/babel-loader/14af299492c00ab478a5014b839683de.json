{"ast":null,"code":"var _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react/todo-app/meme-generator/src/components/MemeGenerator.jsx\";\nimport React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length);\n      const randMemeImg = this.state.allMemeImgs[randNum].url;\n      this.setState({\n        randomImg: randMemeImg\n      });\n    };\n\n    this.state = {\n      topText: \"\",\n      bottomText: \"\",\n      randomImg: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: [] // this.handleChange=this.handleChange.bind(this)\n      // this.handleSubmit=this.handleSubmit.bind(this)\n      // when using arrow functio\n\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const memes = response.data.memes;\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"meme-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"topText\",\n      placeholder: \"Top Text\",\n      value: this.state.topText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"bottomText\",\n      placeholder: \"Bottom Text\",\n      value: this.state.bottomText,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Gen\")), React.createElement(\"div\", {\n      className: \"meme\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.randomImg,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.topText), React.createElement(\"h2\", {\n      className: \"bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.bottomText)));\n  }\n\n}\n\nexport default MemeGenerator;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react/todo-app/meme-generator/src/components/MemeGenerator.jsx"],"names":["React","Component","MemeGenerator","constructor","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","randNum","Math","floor","random","state","allMemeImgs","length","randMemeImg","url","randomImg","topText","bottomText","componentDidMount","fetch","then","response","json","memes","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass MemeGenerator extends Component {\n    constructor () {\n        super()\n        this.state={\n            topText: \"\",\n            bottomText: \"\",\n            randomImg: \"http://i.imgflip.com/1bij.jpg\",\n            allMemeImgs: []\n        }\n        // this.handleChange=this.handleChange.bind(this)\n        // this.handleSubmit=this.handleSubmit.bind(this)\n        // when using arrow functio\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {memes} = response.data\n                this.setState({allMemeImgs: memes})\n            })\n    }\n\n    handleChange = event => {\n        const {name, value} = event.target\n        this.setState({[name]: value})\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        const randNum = Math.floor(Math.random() * this.state.allMemeImgs.length)\n        const randMemeImg = this.state.allMemeImgs[randNum].url\n        this.setState({randomImg: randMemeImg})\n    }\n\n    render() { \n        return ( \n            <div>\n                <form className=\"meme-form\" onSubmit={this.handleSubmit}>\n                    <input \n                        type=\"text\"\n                        name=\"topText\"\n                        placeholder=\"Top Text\"\n                        value={this.state.topText}\n                        onChange={this.handleChange}\n                    />\n                    <input \n                        type=\"text\"\n                        name=\"bottomText\"\n                        placeholder=\"Bottom Text\"\n                        value={this.state.bottomText}\n                        onChange={this.handleChange}\n                    />\n                    <button>Gen</button>\n                </form>\n\n                <div className=\"meme\">\n                    <img src={this.state.randomImg} alt=\"\" />\n                    <h2 className=\"top\">{this.state.topText}</h2>\n                    <h2 className=\"bottom\">{this.state.bottomText}</h2>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default MemeGenerator;"]},"metadata":{},"sourceType":"module"}