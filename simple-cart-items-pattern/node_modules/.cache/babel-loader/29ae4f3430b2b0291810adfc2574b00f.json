{"ast":null,"code":"import _objectSpread from \"/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/components/counters.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter.jsx';\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      const counters = [...this.state.counters];\n      const index = counters.indexOf(counter);\n      counters[index] = _objectSpread({}, counter);\n      counters[index].value++;\n      this.setState();\n    };\n\n    this.handleDelete = counterId => {\n      // console.log('Event handler called', counterId);\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters\n      }); //because key and value are the same {counters: counters}\n    };\n\n    this.handleReset = () => {\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-sm m-2\",\n      onClick: this.handleReset,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Reset\"), this.state.counters.map(counter => React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement // value={counter.value} \n      // id={counter.id}\n      ,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/home/owner/Desktop/GHZAWI/github/react/tutorial/counter-app/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","index","indexOf","setState","handleDelete","counterId","filter","c","handleReset","map","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,QAAQ,EAAE,CACN;AAACC,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OADM,EAEN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAFM,EAGN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAHM,EAIN;AAACD,QAAAA,EAAE,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf,OAJM;AADN,KADqB;;AAAA,SAU7BC,eAV6B,GAUXC,OAAO,IAAI;AACzB,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,OAAT,CAAiBF,OAAjB,CAAd;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,qBAAsBD,OAAtB;AACAJ,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBH,KAAhB;AACA,WAAKK,QAAL;AACH,KAhB4B;;AAAA,SAkB7BC,YAlB6B,GAkBbC,SAAD,IAAe;AAC1B;AACA,YAAMT,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBU,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,SAAzC,CAAjB;AACA,WAAKF,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd,EAH0B,CAGA;AAC7B,KAtB4B;;AAAA,SAwB7BY,WAxB6B,GAwBf,MAAM;AAChB,YAAMZ,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBF,CAAC,IAAI;AAC1CA,QAAAA,CAAC,CAACT,KAAF,GAAU,CAAV;AACA,eAAOS,CAAP;AACC,OAHY,CAAjB;AAII,WAAKJ,QAAL,CAAc;AAACP,QAAAA;AAAD,OAAd;AACP,KA9B4B;AAAA;;AAgC7Bc,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,4BADd;AAEI,MAAA,OAAO,EAAE,KAAKF,WAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAOK,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,GAApB,CAAwBT,OAAO,IAChC,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACH,EADjB;AAEI,MAAA,QAAQ,EAAE,KAAKO,YAFnB;AAGI,MAAA,WAAW,EAAE,KAAKL,eAHtB,CAII;AACA;AALJ;AAMI,MAAA,OAAO,EAAEC,OANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADC,CAPL,CADA;AAqBH;;AAtD4B;;AAyDjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Counter from './counter.jsx'\n\nclass Counters extends Component {\n    state = { \n        counters: [\n            {id: 1, value: 4},\n            {id: 2, value: 0},\n            {id: 3, value: 0},\n            {id: 4, value: 0}\n        ]\n     }; \n\n    handleIncrement = counter => {\n        const counters = [...this.state.counters];\n        const index = counters.indexOf(counter);\n        counters[index] = {...counter};\n        counters[index].value++;\n        this.setState()\n    }\n\n    handleDelete = (counterId) => {\n        // console.log('Event handler called', counterId);\n        const counters = this.state.counters.filter(c => c.id !== counterId);\n        this.setState({counters}) //because key and value are the same {counters: counters}\n    };\n\n    handleReset = () => {\n        const counters = this.state.counters.map(c => {\n            c.value = 0;\n            return c;\n            });\n            this.setState({counters})\n    };\n\n    render() { \n        return ( \n        <div>\n            <button \n                className=\"btn btn-primary btn-sm m-2\"\n                onClick={this.handleReset}\n            >\n                Reset\n            </button>\n            {this.state.counters.map(counter => (\n            <Counter \n                key={counter.id} \n                onDelete={this.handleDelete}\n                onIncrement={this.handleIncrement} \n                // value={counter.value} \n                // id={counter.id}\n                counter={counter}\n                >\n                {/* <h4>Counter #{counter.id}</h4> or you can pass an id and render it in counter.jsx */}\n            </Counter>\n            ))} \n        </div> );\n    }\n}\n \nexport default Counters;"]},"metadata":{},"sourceType":"module"}